package pageflip.book{	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Shape;	import flash.display.Sprite;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;	import flash.geom.Point;		import greensock.TweenMax;	import greensock.easing.Quad;		import pageflip.core.PageFlip;
		public class Page extends EventDispatcher {				private var _scope:*;				private var flip:Point;				private var front:BitmapData;				private var back:BitmapData;				private var render:Shape;				private var _width:Number;				private var _height:Number;				private var _page:Sprite;				private var _oPage:Page;				private var _name:String;						public function getName():String {			return _name;		}						public function Page(scope:*, w:Number, h:Number, x:Number, y:Number, frontPage:*, backPage:*, name:String) {			_scope = scope;			_width = w;			_height = h;			_oPage = this;						_name = name;			_page = new Sprite()			_page.x = x;			_page.y = y;			_scope.addChild(_page);						render = new Shape();			_page.addChild(render);						front = new BitmapData(_width, _height, true, 0);			front.draw(frontPage);			back = new BitmapData(_width, _height, true, 0);			back.draw(backPage);			flip = new Point(_width, _height);			drawPage();			_page.addEventListener(MouseEvent.CLICK, turnPageForward);		}				private function turnPageForward(event:MouseEvent = null):void{			_page.removeEventListener(MouseEvent.CLICK, turnPageForward);			_page.addEventListener(MouseEvent.CLICK, turnPageBackward);						dispatchEvent(new PageEvent(PageEvent.FLIP_START, _page, _oPage, true));			TweenMax.to(flip, 3, {bezier:[{x:-_width, y:_height / 3}, {x:-_width, y:_height}], ease:Quad.easeOut, onUpdate:drawPage, onComplete:onPageDone});		}				private function turnPageBackward(event:MouseEvent = null):void		{			_page.addEventListener(MouseEvent.CLICK, turnPageForward);			_page.removeEventListener(MouseEvent.CLICK, turnPageBackward);						dispatchEvent(new PageEvent(PageEvent.FLIP_START, _page, _oPage, true));			TweenMax.to(flip, 3, {bezier:[{x:_width, y:_height / 3}, {x:_width, y:_height}], ease:Quad.easeOut, onUpdate:drawPage, onComplete:onPageDone});		}		private function drawPage():void{			render.graphics.clear()			var o:Object = PageFlip.computeFlip(flip,// flipped point					new Point(1,1),// of bottom-right corner					front.width,// size of the sheet					back.height,					true,// in horizontal mode					1);// sensibility to one                            // sensibility to one 			PageFlip.drawBitmapSheet(o,// computeflip returned object					render,// target					front,// bitmap page 0					back);// bitmap page 1		}				private function onPageDone():void{			dispatchEvent(new PageEvent(PageEvent.FLIP_COMPLETE, _page, _oPage, true));		}				}}