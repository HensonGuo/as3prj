/*   Copyright (c) 2008, Adobe Systems Incorporated   All rights reserved.   Copyright (c) 2010, Yasunobu Ikeda (clockmaker)   All rights reserved.   ※as3corelibのJSONクラスを改変したためライセンス条項(new BSD License)に	基づいて元の著作権表示を残しています。   Redistribution and use in source and binary forms, with or without   modification, are permitted provided that the following conditions are   met: * Redistributions of source code must retain the above copyright notice,   this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright   notice, this list of conditions and the following disclaimer in the   documentation and/or other materials provided with the distribution. * Neither the name of Adobe Systems Incorporated nor the names of its   contributors may be used to endorse or promote products derived from   this software without specific prior written permission.   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS   IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */package serialization.xml{	import flash.utils.getDefinitionByName;	import __AS3__.vec.Vector;	/**	 * XMLDecoder は XML をネイティブのオブジェクトに変換します。	 * @author yasu	 */	public class XMLDecoder	{		/**		 * 新しい XMLDecoder インスタンスを作成します。		 *		 * @param xml ネイティブのオブジェクトに変換させたいXMLインスタンスを指定します。		 * @langversion ActionScript 3.0		 * @playerversion Flash 10.0		 * @tiptext		 */		public function XMLDecoder(xml:XML)		{			if(xml != null){				value = parseValue(xml.children()[0]);			}		}		/** The value that will get parsed from the JSON string */		private var value:*;		/**		 * ネイティブのオブジェクトを取得します。		 *		 * @return コンストラクタで与えたXMLから生成したネイティブのオブジェクトです。		 * @langversion ActionScript 3.0		 * @playerversion Flash 10.0		 * @tiptext		 */		public function getValue():*		{			return value;		}		/**		 * Attempt to parse a value		 */		private function parseValue(xml:XML):Object		{			var type:String = xml.@type;			var name:String = xml.@name;			var itemXML:XML;			var cls:Class;			var myobject:Object;			if (type == "Number")			{				return Number(xml);			}			else if (type == "String")			{				return String(xml);			}			else if (type == "Boolean")			{				return Boolean(xml == "true" ? true : false);			}			else if (type == "Array")			{				var array:Array = [];				for each (itemXML in xml.children())				{					array.push(parseValue(itemXML));				}				return array;			}			else if (type.indexOf("__AS3__.vec::Vector") == 0)			{				cls = getDefinitionByName(type) as Class;								myobject = new cls();				for each (itemXML in xml.children())				{					myobject.push(parseValue(itemXML));				}				return myobject;								for each (itemXML in xml.children())				{					array.push(parseValue(itemXML));				}				return array;			}			else if (type == "Object")			{				var object:Object = {};				for each (itemXML in xml.children())				{					object[itemXML.@name] = parseValue(itemXML);				}				return object;			}			else if(type == "")			{				return null;			}			else			{				cls = getDefinitionByName(type) as Class;								myobject = new cls();				for each (itemXML in xml.children())				{					myobject[itemXML.@name] = parseValue(itemXML);				}				return myobject;			}			return null;		}	}}